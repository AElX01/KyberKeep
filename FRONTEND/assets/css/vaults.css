#nav-toggle:checked ~ #main-content {
    width: calc(var(--navbar-width-min) - 16px);
  }
  #main-content {
    position: absolute;
    top: 1vw;
    left: calc(var(--navbar-width) + 2vw);
    right: 1vw;
    bottom: 1vw;
    padding-left: 2rem;
    padding-right: 2rem;
    background: #f4f6f8;
    border-radius: 16px;
    overflow: hidden;
    /*overflow-y: auto;*/
    transition: left 0.3s;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    z-index: 1;
  }
  
  /* Adjust for retracted sidebar */
  #nav-toggle:checked ~ #main-content {
    left: calc(var(--navbar-width-min) + 2vw);
  }
  
  .vault-grid {
    display: grid;
    grid-template-columns: repeat(3, minmax(260px, 1fr));
    gap: 1.5rem;
  }
  
  .vault-card {
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: white;
  padding: 1rem;
  border-radius: 12px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  transition: transform 0.2s ease;
  cursor: pointer;
  gap: 1rem;
}

.vault-icon {
  width: 32px;
  height: 32px;
  flex-shrink: 0;
}

.vault-info {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.vault-title {
  font-weight: 600;
  font-size: 1rem;
  color: #333;
}

.vault-meta {
  font-size: 0.875rem;
  color: #666;
}

.vault-actions {
  display: flex;
  gap: 0.5rem;
}

.vault-actions button {
  background: transparent;
  border: none;
  cursor: pointer;
  font-size: 1.1rem;
  transition: color 0.2s ease;
}

.vault-actions button:hover {
  color: #007bff;
}

.vault-card:hover {
  transform: translateY(-4px);
}

.vault-icon {
  width: 21px;
  height: 21px;
  vertical-align: middle; 
}

/* From Uiverse.io by CristianMontoya98 */ 
.new_password {
  width: 6.5em;
  height: 2.3em;
  margin: 0.5em;
  background: black;
  color: white;
  border: none;
  border-radius: 0.625em;
  font-size: 20px;
  font-weight: bold;
  cursor: pointer;
  position: absolute; /* Change to absolute for positioning within #main-content */
  bottom: 1.5em; /* Distance from the bottom of #main-content */
  right: 1.5em; /* Distance from the right of #main-content */
  z-index: 1;
  overflow: hidden;
}

.new_password:hover {
 color: black;
}

.new_password:after {
 content: "";
 background: white;
 position: absolute;
 z-index: -1;
 left: -20%;
 right: -20%;
 top: 0;
 bottom: 0;
 transform: skewX(-45deg) scale(0, 1);
 transition: all 0.5s;
}

.new_password:hover:after {
 transform: skewX(-45deg) scale(1, 1);
 -webkit-transition: all 0.5s;
 transition: all 0.5s;
}

    /* Modal Overlay */
.modal-overlay { 
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0, 0, 0, 0.6);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

/* Modal Box */
.modal-content {
  background: #ffffff;
  border-radius: 12px;
  padding: 2rem;
  max-width: 400px;
  width: 100%;
  box-shadow: 0 12px 24px rgba(0,0,0,0.2);
  position: relative;
  animation: fadeIn 0.3s ease;
}

/* Close Button */
.modal-close {
  position: absolute;
  top: 0.75rem;
  right: 0.75rem;
  background: transparent;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
}

/* Title */
.modal-title {
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 1.5rem;
  color: #333;
  text-align: center;
}

/* Field Layout */
.modal-field-group {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.modal-field {
  flex-grow: 1;
  margin-bottom: 0; /* override previous margin */
}

.modal_cpy_btn {
  background: transparent;
  border: none;
  cursor: pointer;
  font-size: 1rem;
  color: #777;
  transition: color 0.2s ease;
  padding: 0.4rem;
  margin-top: 1rem;
  border-radius: 6px;
}

.modal_cpy_btn:hover {
  color: #007bff;
  background-color: #f0f0f0;
}

.modal-field label {
  display: block;
  font-size: 0.875rem;
  color: #777;
  margin-bottom: 0.25rem;
}

.modal-data {
  background: #f5f5f5;
  padding: 0.5rem 0.75rem;
  border-radius: 8px;
  font-family: monospace;
  font-size: 0.95rem;
  color: #444;
  border: none; /* Remove default input border */
  outline: none; /* Remove default input outline */
  box-sizing: border-box; /* Ensure padding and border are included in the element's width and height */
  width: 100%; /* Make the input span the full width of the container */
  max-width: 400px; /* Optional: Set a max width to match the div's intended size */
}

/* Ensure consistency across browsers */
input.modal-data::placeholder {
  color: #444; /* Match the placeholder color to the text color */
  opacity: 1; /* Ensure placeholder is fully visible */
}

.modal-data-create {
    background: #f5f5f5;
    padding: 0.5rem 0.75rem;
    border-radius: 8px;
    font-family: monospace;
    font-size: 0.95rem;
    color: #444;
  }

/* Actions */
.modal-actions {
  display: flex;
  justify-content: right;
  gap: 0.5rem;
  margin-top: 1.5rem;
}

.modal-section-title {
  font-size: 1rem;
  font-weight: 600;
  margin-bottom: 0.75rem;
  color: #444;
  border-bottom: 1px solid #eee;
  padding-bottom: 0.25rem;
}

.modal-header {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  margin-bottom: 1.5rem;
}

.modal-header .vault-icon {
  width: 25px;
  height: 25px;
}

/* Fade-in Animation */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: scale(0.98);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.delete_btn {
  padding: 1.3em 3em;
  font-size: 12px;
  text-transform: uppercase;
  letter-spacing: 2.5px;
  font-weight: 500;
  color: #000;
  background-color: #fff;
  border: none;
  border-radius: 45px;
  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease 0s;
  cursor: pointer;
  outline: none;
}

.delete_btn:hover {
  background-color: #c42323;
  box-shadow: 0px 15px 20px rgba(229, 46, 46, 0.4);
  color: #fff;
  transform: translateY(-7px);
}

.delete_btn:active {
  transform: translateY(-1px);
}

.edit_btn {
  padding: 1.3em 3em;
  font-size: 12px;
  text-transform: uppercase;
  letter-spacing: 2.5px;
  font-weight: 500;
  color: #000;
  background-color: #fff;
  border: none;
  border-radius: 45px;
  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease 0s;
  cursor: pointer;
  outline: none;
}

.edit_btn:hover {
  background-color: #2359c4;
  box-shadow: 0px 15px 20px rgba(46, 89, 229, 0.4);
  color: #fff;
  transform: translateY(-7px);
}

.edit_btn:active {
  transform: translateY(-1px);
}

.cancel_btn {
    padding: 1.3em 3em;
    font-size: 12px;
    text-transform: uppercase;
    letter-spacing: 2.5px;
    font-weight: 500;
    color: #000;
    background-color: #fff;
    border: none;
    border-radius: 45px;
    box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease 0s;
    cursor: pointer;
    outline: none;
  }
  
  .cancel_btn:hover {
    background-color: #464646;
    box-shadow: 0px 15px 20px rgba(43, 43, 43, 0.232);
    color: #fff;
    transform: translateY(-7px);
  }
  
  .cancel_btn:active {
    transform: translateY(-1px);
  }

  .card_menu {
    width: 200px;
    background-color: rgba(36, 40, 50, 1);
    background-image: linear-gradient(
      139deg,
      rgba(36, 40, 50, 1) 0%,
      rgba(36, 40, 50, 1) 0%,
      rgba(37, 28, 40, 1) 100%
    );
  
    user-select: none;
    border-radius: 10px;
    padding: 10px;
    display: flex;
    flex-direction: column;
    gap: 8px;
  }
  
  .card_menu .list .element label input[type="radio"] {
    display: none;
  }
  
  .card_menu .separator {
    border-top: 1.5px solid #42434a;
  }
  
  .card_menu .list {
    list-style-type: none;
    display: flex;
    flex-direction: column;
    gap: 4px;
    padding: 0px;
  }
  
  .card_menu .list .element > label {
    display: flex;
    align-items: center;
    color: #7e8590;
    gap: 10px;
    transition: all 0.3s ease-out;
    padding: 6px;
    border-radius: 6px;
    cursor: pointer;
    font-weight: 600;
  }
  
  .card_menu .list .element label svg {
    width: 19px;
    height: 19px;
    transition: all 0.3s ease-out;
  }
  
  .card_menu .list .element label:has(input[type="radio"]:checked),
  .card_menu .list .element label:hover {
    background-color: var(--color);
    color: var(--hover-color);
  }
  
  .card_menu .list .element label:active {
    transform: scale(0.96);
  }
  
  .card_menu .list .element label:has(input[type="radio"]:checked) svg,
  .card_menu .list .element label:hover svg {
    stroke: var(--hover-storke);
  }

  /* From Uiverse.io by JkHuger */ 
@keyframes loader_5191 {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

.square {
  background: #ddd;
  width: 10px;
  height: 10px;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -5px;
  margin-left: -5px;
}

#sq1 {
  margin-top: -25px;
  margin-left: -25px;
  animation: loader_5191 675ms ease-in-out 0s infinite alternate;
}

#sq2 {
  margin-top: -25px;
  animation: loader_5191 675ms ease-in-out 75ms infinite alternate;
}

#sq3 {
  margin-top: -25px;
  margin-left: 15px;
  animation: loader_5191 675ms ease-in-out 150ms infinite;
}

#sq4 {
  margin-left: -25px;
  animation: loader_5191 675ms ease-in-out 225ms infinite;
}

#sq5 {
  animation: loader_5191 675ms ease-in-out 300ms infinite;
}

#sq6 {
  margin-left: 15px;
  animation: loader_5191 675ms ease-in-out 375ms infinite;
}

#sq7 {
  margin-top: 15px;
  margin-left: -25px;
  animation: loader_5191 675ms ease-in-out 450ms infinite;
}

#sq8 {
  margin-top: 15px;
  animation: loader_5191 675ms ease-in-out 525ms infinite;
}

#sq9 {
  margin-top: 15px;
  margin-left: 15px;
  animation: loader_5191 675ms ease-in-out 600ms infinite;
}

.loader-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(255, 255, 255, 0.7); /* semi-transparent background */
  z-index: 10;
}

.hidden {
  display: none;
}


.group {
  display: flex;
  align-items: center;
  position: relative;
  flex-grow: 1;           
  max-width: none;        
  min-width: 200px; 
}

#query { 
  font-family: "Montserrat", sans-serif;
  width: 100%;
  height: 45px;
  padding-left: 2.5rem;
  box-shadow: 0 0 0 1.5px #2b2c37, 0 0 25px -17px #000;
  border: 0;
  border-radius: 12px;
  background-color: #16171d;
  outline: none;
  color: #bdbecb;
  transition: all 0.25s cubic-bezier(0.19, 1, 0.22, 1);
  cursor: text;
  z-index: 0;
}

#query::placeholder {
  color: #bdbecb;
}

#query:focus {
  box-shadow: 0 0 0 2.5px #2f303d;
}

.search-icon {
  position: absolute;
  left: 1rem;
  fill: #bdbecb;
  width: 1rem;
  height: 1rem;
  pointer-events: none;
  z-index: 1;
}

.header-row {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  gap: 1rem; /* space between title and search bar */
  flex-wrap: wrap; /* handle smaller screens */
  margin-bottom: 1.5rem;
}

/* From Uiverse.io by G4b413l */ 
.newtons-cradle {
  --uib-size: 50px;
  --uib-speed: 1.2s;
  --uib-color: #474554;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  width: var(--uib-size);
  height: var(--uib-size);
 }
 
 .newtons-cradle__dot {
  position: relative;
  display: flex;
  align-items: center;
  height: 100%;
  width: 25%;
  transform-origin: center top;
 }
 
 .newtons-cradle__dot::after {
  content: '';
  display: block;
  width: 100%;
  height: 25%;
  border-radius: 50%;
  background-color: var(--uib-color);
 }
 
 .newtons-cradle__dot:first-child {
  animation: swing var(--uib-speed) linear infinite;
 }
 
 .newtons-cradle__dot:last-child {
  animation: swing2 var(--uib-speed) linear infinite;
 }
 
 @keyframes swing {
  0% {
   transform: rotate(0deg);
   animation-timing-function: ease-out;
  }
 
  25% {
   transform: rotate(70deg);
   animation-timing-function: ease-in;
  }
 
  50% {
   transform: rotate(0deg);
   animation-timing-function: linear;
  }
 }
 
 @keyframes swing2 {
  0% {
   transform: rotate(0deg);
   animation-timing-function: linear;
  }
 
  50% {
   transform: rotate(0deg);
   animation-timing-function: ease-out;
  }
 
  75% {
   transform: rotate(-70deg);
   animation-timing-function: ease-in;
  }
 } 
 
.loader-wrapper {
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center;
  height: 100%; /* or use 100% if #main-content has a fixed height */
  width: 100%;
  position: absolute;
  top: 30%;
  left: 50%;
  transform: translate(-50%, -30%);
  bottom: 0%;
}
